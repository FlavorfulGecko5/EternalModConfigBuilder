This file provides a tutorial on constucting labels and basic expressions. To understand how to fully
utilize the expression system, consult the relevant JSONEval documentation: 
https://github.com/FlavorfulGecko5/JSONEval/tree/master/documentation/ExpressionEvaluation


To best understand what is happening here, you should have "config.json" open and readable alongside this file.

Let's start simple: the following label has a constant "999" as it's expression.
This means the label will be replaced with "999" when this file is parsed.
999

To insert an option we defined in our configuration file into the expression,
we can simply write the option's name. The following label would be replaced
with the value of the option "x", which is defined in the configuration file.
123

Of course, our expressions can be more complicated than just single values.
We can have a full range of arithmetic expressions - as the following two 
examples show. Note that both "x" and "y" are defined in our configuration file.
93
53.2





What if the values we want to insert are strings? Wherever this is the case,
we must put single quotes ('') around string literals
The Revenant
cacodemon

Using these rules, we can concatenate (combine) two strings together like so:
cacodemon is the best demon





We can also perform a full range of logical expressions:
False
True
False





Variables can be used to represent expressions. The following label will
be replaced with the value of "y":
-30





You may define and use list variables in your configuration files.
The elements of a list are accessed by their index, starting at index 0
The first element in 'listA' is 1

The name of the list, without any index notation, represents the number of elements inside the list:
listA contains 4 elements











Next-up, we have toggle labels. Whereas a variable label will be replaced with whatever
it's expression evaluates to, a toggle label can be used to keep or remove an entire
section of a file, based on what it's expression evaluates to. Toggle label expressions
MUST be resolveable to a Boolean

I will still be visible when this file is parsed.




Toggle labels can be nested inside of each other

I will be visible when this file is parsed.



